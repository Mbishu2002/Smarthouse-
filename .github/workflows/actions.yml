name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker image
        run: |
          docker build -t my-smart-home-app:latest .

      - name: Install OpenStack CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-openstackclient

      - name: Authenticate with OpenStack
        run: |
          openstack --os-username ${{ secrets.OS_USERNAME }} \
                    --os-password ${{ secrets.OS_PASSWORD }} \
                    --os-project-name ${{ secrets.OS_PROJECT_NAME }} \
                    --os-auth-url ${{ secrets.OS_AUTH_URL }} \
                    server list

      - name: Deploy to OpenStack
        run: |
          # Create a new OpenStack instance (replace placeholders with actual values)
          openstack server create --image ${{ secrets.OS_IMAGE_ID }} \
                                  --flavor ${{ secrets.OS_FLAVOR_ID }} \
                                  --network ${{ secrets.OS_NETWORK_ID }} \
                                  --key-name ${{ secrets.OS_KEY_NAME }} \
                                  my-instance

          # Retrieve the floating IP address of the newly created instance
          FLOATING_IP=$(openstack floating ip list -f value -c "Floating IP Address" | head -n 1)

          # Allocate the floating IP to the instance
          openstack server add floating ip my-instance $FLOATING_IP

          # SSH into the instance and transfer Docker image
          docker save my-smart-home-app:latest | gzip > my-smart-home-app.tar.gz
          scp -i ${{ secrets.OS_SSH_KEY }} my-smart-home-app.tar.gz ubuntu@$FLOATING_IP:~/

          # SSH into the instance and load Docker image
          ssh -i ${{ secrets.OS_SSH_KEY }} ubuntu@$FLOATING_IP << 'EOF'
            gunzip -c my-smart-home-app.tar.gz | docker load
            docker run -d -p 80:80 my-smart-home-app:latest
          EOF

        env:
          OS_USERNAME: ${{ secrets.OS_USERNAME }}
          OS_PASSWORD: ${{ secrets.OS_PASSWORD }}
          OS_PROJECT_NAME: ${{ secrets.OS_PROJECT_NAME }}
          OS_AUTH_URL: ${{ secrets.OS_AUTH_URL }}
          OS_SSH_KEY: ${{ secrets.OS_SSH_KEY }}
